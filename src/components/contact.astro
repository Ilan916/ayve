<div id="contact-form" class="relative isolate bg-white px-6 py-24 sm:py-32 lg:px-8">
  <div class="mx-auto max-w-xl lg:max-w-4xl">
  <h2 class="text-pretty text-4xl font-semibold tracking-tight text-gray-900 text-center sm:text-5xl font-general-sans animate-on-scroll">Réservez votre rendez-vous gratuit.</h2>
  <p class="mt-2 text-lg/8 text-gray-600 text-center font-satoshi animate-on-scroll">Sans engagement, réponse sous 24h.</p>
    <div class="mt-16 flex flex-col gap-16 sm:gap-y-20 lg:flex-row">
            <form  class="lg:flex-auto animate-on-scroll">
        <div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
          <div>
            <label for="prenom" class="block text-sm/6 font-semibold text-gray-900 font-general-sans">Prénom</label>
            <div class="mt-2.5">
              <input id="prenom" type="text" name="prenom" autocomplete="given-name" required class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 backdrop-blur placeholder:text-gray-400  focus:outline-2 focus:-outline-offset-2 focus:outline-[#1e274a] font-satoshi" />
            </div>
          </div>
          <div>
            <label for="nom" class="block text-sm/6 font-semibold text-gray-900 font-general-sans">Nom</label>
            <div class="mt-2.5">
              <input id="nom" type="text" name="nom" autocomplete="family-name" required class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 backdrop-blur placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-[#1e274a] font-satoshi" />
            </div>
          </div>
          <div>
            <label for="email" class="block text-sm/6 font-semibold text-gray-900 font-general-sans">Email</label>
            <div class="mt-2.5">
              <input id="email" type="email" name="email" autocomplete="email" required class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 backdrop-blur placeholder:text-gray-400  focus:outline-2 focus:-outline-offset-2 focus:outline-[#1e274a] font-satoshi" />
            </div>
          </div>
          <div>
            <label for="telephone" class="block text-sm/6 font-semibold text-gray-900 font-general-sans">Téléphone</label>
            <div class="mt-2.5">
              <input id="telephone" type="tel" name="telephone" autocomplete="tel" required class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 backdrop-blur placeholder:text-gray-400  focus:outline-2 focus:-outline-offset-2 focus:outline-[#1e274a] font-satoshi" />
            </div>
          </div>
          <div class="sm:col-span-2">
            <label for="projet" class="block text-sm/6 font-semibold text-gray-900 font-general-sans">Décrivez votre projet</label>
            <div class="mt-2.5">
              <textarea id="projet" name="projet" rows="4" required class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 backdrop-blur placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-[#1e274a] font-satoshi" placeholder="Parlez-nous de votre projet, vos besoins, vos objectifs..."></textarea>
            </div>
          </div>
        </div>
        <div class="mt-10 animate-on-scroll">
          <button type="submit" id="submit-btn" class="block w-full rounded-md bg-[#1e274a] px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-[#1a2142] focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[#1e274a] disabled:opacity-50 disabled:cursor-not-allowed font-satoshi">
            <span id="btn-text">Envoyer ma demande</span>
            <span id="btn-loading" class="hidden">Envoi en cours...</span>
          </button>
        </div>
  <div id="form-message" class="mt-4 text-sm hidden font-satoshi"></div>
  <p class="mt-4 text-sm/6 text-gray-500 font-satoshi">En soumettant ce formulaire, j'accepte d'être contacté pour mon projet web.</p>
      </form>
      <div class="lg:mt-6 lg:w-80 lg:flex-none animate-on-scroll">
        <figure class="mt-10">
          <blockquote class="text-lg/8 font-semibold text-gray-900 font-satoshi">
            <p>“Excellent prestataire ! De très bons conseils et ainsi bien apprécié.
              Merci pour votre travail”</p>
          </blockquote>
          <figcaption class="mt-10 flex gap-x-6">
            <img src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=96&h=96&q=80" alt="photo de profil fictive d'une cliente" class="size-12 flex-none rounded-full bg-gray-50" />
            <div>
              <div class="text-base font-semibold text-gray-900 font-general-sans">Chystelle.</div>
              <div class="text-sm/6 text-gray-600 font-satoshi">Gérante d'Atelier Coiffure</div>
            </div>
          </figcaption>
        </figure>
      </div>
    </div>
  </div>
</div>

<script>
  // Gestion du formulaire de contact
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const btnText = document.getElementById('btn-text');
    const btnLoading = document.getElementById('btn-loading');
    const formMessage = document.getElementById('form-message');

    if (form && submitBtn) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        // Récupération des données du formulaire
        const formData = new FormData(form);
        const data = {
          prenom: formData.get('prenom'),
          nom: formData.get('nom'),
          email: formData.get('email'),
          telephone: formData.get('telephone'),
          projet: formData.get('projet')
        };

        // État de chargement
        submitBtn.disabled = true;
        if (btnText) btnText.classList.add('hidden');
        if (btnLoading) btnLoading.classList.remove('hidden');
        if (formMessage) formMessage.classList.add('hidden');

        try {
          const response = await fetch('/api/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          const result = await response.json();

          if (result.success) {
            // Succès
            if (formMessage) {
              formMessage.className = 'mt-4 p-4 rounded-lg bg-green-50 border border-green-200';
              formMessage.innerHTML = `
                <div class="flex items-center">
                  <svg class="w-5 h-5 text-green-400 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                  </svg>
                  <div>
                    <p class="text-sm font-medium text-green-800">Message envoyé avec succès !</p>
                    <p class="text-sm text-green-700">Nous vous répondrons sous 24h.</p>
                  </div>
                </div>
              `;
              formMessage.classList.remove('hidden');
            }
            form.reset();
          } else {
            // Erreur
            if (formMessage) {
              formMessage.className = 'mt-4 p-4 rounded-lg bg-red-50 border border-red-200';
              formMessage.innerHTML = `
                <div class="flex items-center">
                  <svg class="w-5 h-5 text-red-400 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                  </svg>
                  <div>
                    <p class="text-sm font-medium text-red-800">Erreur lors de l'envoi</p>
                    <p class="text-sm text-red-700">${result.message || 'Une erreur est survenue. Veuillez réessayer.'}</p>
                  </div>
                </div>
              `;
              formMessage.classList.remove('hidden');
            }
          }
        } catch (error) {
          // Erreur de réseau
          if (formMessage) {
            formMessage.className = 'mt-4 p-4 rounded-lg bg-red-50 border border-red-200';
            formMessage.innerHTML = `
              <div class="flex items-center">
                <svg class="w-5 h-5 text-red-400 mr-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                </svg>
                <div>
                  <p class="text-sm font-medium text-red-800">Erreur de connexion</p>
                  <p class="text-sm text-red-700">Veuillez vérifier votre connexion et réessayer.</p>
                </div>
              </div>
            `;
            formMessage.classList.remove('hidden');
          }
        } finally {
          // Rétablir l'état du bouton
          submitBtn.disabled = false;
          if (btnText) btnText.classList.remove('hidden');
          if (btnLoading) btnLoading.classList.add('hidden');
        }
      });
    }
  });
</script>
